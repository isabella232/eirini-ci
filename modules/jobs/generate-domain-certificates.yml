jobs:
- name: generate-domain-certificates
  plan:
  - get: cluster-state
    trigger: true
    passed:
    - (( concat "create-cluster-" config.cluster.name ))
  - get: ci-resources
  - task: download-kubeconfig
    params:
      CLUSTER_NAME: (( grab config.cluster.name ))
      GCP_REGION: (( grab config.gcp.region ))
      GCP_SERVICE_ACCOUNT_JSON: (( grab config.gcp.service-account-json ))
      GCP_ZONE: (( grab config.gcp.zone ))
    config:
      image_resource:
        source:
          repository: google/cloud-sdk
          username: (( grab config.dockerhub.user ))
          password: (( grab config.dockerhub.password ))
        type: docker-image
      platform: linux
      inputs:
        - name: ci-resources
      outputs:
        - name: kube
      run:
        path: /usr/bin/env
        args:
        - bash
        - -c
        - (( file "../../inline-tasks/gcp-download-kubeconfig.sh" ))
  - task: generate-domain-certificates
    config:
      container_limits: {}
      image_resource:
        source:
          repository: eirini/gcloud
          username: (( grab config.dockerhub.user ))
          password: (( grab config.dockerhub.password ))
        type: docker-image
      platform: linux
      inputs:
      - name: kube
      - name: ci-resources
      params:
        GCP_PROJECT_ID: (( grab config.gcp.project-id ))
        DNS_SERVICE_ACCOUNT_JSON: (( grab config.gcp.dns-service-account-json ))
      run:
        args:
        - bash
        - -c
        - (( file "../../inline-tasks/install-cert-manager.sh" ))
        path: /usr/bin/env
