jobs:
- name: run-integration-tests
  public: true
  serial: true
  serial_groups:
  - integration
  plan:
  - in_parallel:
      steps:
      - get: eirini
        trigger: true
        passed:
          - run-tests
      - get: ci-resources
  - in_parallel:
      steps:
      - do:
        - task: download-kubeconfig
          config:
              platform: linux
              image_resource:
                type: docker-image
                source:
                  repository: google/cloud-sdk
                  username: (( grab config.dockerhub.user ))
                  password: (( grab config.dockerhub.password ))
              inputs:
              - name:  ci-resources
              outputs:
              - name:  kube
              params:
                CLUSTER_NAME: (( grab config.cluster.name ))
                GCP_REGION: (( grab config.gcp.region ))
                GCP_SERVICE_ACCOUNT_JSON: (( grab config.gcp.service-account-json ))
                GCP_ZONE: (( grab config.gcp.zone ))
              run:
                path: /usr/bin/env
                args:
                - bash
                - -c
                - (( file "../../inline-tasks/gcp-download-kubeconfig.sh" ))
        - task: run-integration-tests
          privileged: true
          config:
            caches:
            - path: /root/.cache/go-build
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: eirini/telepresence
                username: (( grab config.dockerhub.user ))
                password: (( grab config.dockerhub.password ))
            inputs:
            - name:  eirini
            - name:  kube
            outputs:
            - name:  output
            params:
                EIRINIUSER_PASSWORD: (( grab config.dockerhub.password ))
                GOOGLE_APPLICATION_CREDENTIALS: "kube/service-account.json"
            run:
              path: /usr/bin/env
              args:
              - bash
              - -c
              - (( file "../../inline-tasks/run-integration-tests.sh" ))
        - task: upload-code-climate
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: eirini/codeclimate-reporter
                username: (( grab config.dockerhub.user ))
                password: (( grab config.dockerhub.password ))
            inputs:
            - name:  eirini
            params:
                CC_TEST_REPORTER_ID: (( grab config.codeclimate.id ))
            run:
              path: /usr/bin/env
              args:
              - bash
              - -c
              - |
                pushd eirini
                ./test-reporter format-coverage coverage/*.out -t gocov --output coverage/report.json --prefix "code.cloudfoundry.org/eirini/"
                ./test-reporter-latest-linux-amd64 upload-coverage -i coverage/report.json
                popd

  on_failure: (( grab slack-notification.on_failure ))
  on_failure: (( grab slack-notification.on_failure ))
